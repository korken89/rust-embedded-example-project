[package]
name = "app"
categories = ["embedded", "no-std"]
authors = ["Emil Fresk <emil.fresk@gmail.com>"]
description = "Example project"
keywords = ["arm", "cortex-m", "mav"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/korken89/rust-embedded-example-project"
version = "0.1.0"
edition = "2018"

[dependencies]
panic-halt = "0.2"
panic-semihosting = "0.5"
cortex-m-rtic = "0.5"

[dependencies.firmware]
path = "../firmware"

[dependencies.nrf52832-hal]
version = "0.8"
default-features = false
features = [ "xxAA-package", "rt" ]

# this lets you use `cargo fix`!
[[bin]]
name = "app"
test = false
bench = false

[profile.dev]
opt-level = 1
codegen-units = 16
debug = true
lto = false

[profile.release]
opt-level = "s"     # optimize for size
codegen-units = 1   # better optimizations
debug = true        # symbols are nice and they don't increase the size on Flash
lto = true          # better optimizations

# `syn` and other proc-macro crates take very long to build when optimized
# this disables optimizations for them reducing the time it takes to build the
# whole dependency graph by ~80%
[profile.dev.build-override]
codegen-units = 16
debug = false
debug-assertions = false
incremental = true
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 16
debug = false
debug-assertions = false
incremental = true
opt-level = 0
overflow-checks = false

